SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;
CREATE EXTENSION IF NOT EXISTS "pgsodium" WITH SCHEMA "pgsodium";
CREATE EXTENSION IF NOT EXISTS "pg_graphql" WITH SCHEMA "graphql";
CREATE EXTENSION IF NOT EXISTS "pg_stat_statements" WITH SCHEMA "extensions";
CREATE EXTENSION IF NOT EXISTS "pgcrypto" WITH SCHEMA "extensions";
CREATE EXTENSION IF NOT EXISTS "pgjwt" WITH SCHEMA "extensions";
CREATE EXTENSION IF NOT EXISTS "supabase_vault" WITH SCHEMA "vault";
CREATE EXTENSION IF NOT EXISTS "uuid-ossp" WITH SCHEMA "extensions";
SET default_tablespace = '';
SET default_table_access_method = "heap";
CREATE TABLE IF NOT EXISTS "public"."item" (
    "id" "text" NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "display_title" "text" NOT NULL,
    "type" "text" NOT NULL,
    "display_image" "text"
);
ALTER TABLE "public"."item" OWNER TO "postgres";
CREATE TABLE IF NOT EXISTS "public"."movie_detail" (
    "tmdb_id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "item_id" "text" NOT NULL
);
ALTER TABLE "public"."movie_detail" OWNER TO "postgres";
ALTER TABLE "public"."movie_detail" ALTER COLUMN "tmdb_id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."movie_detail_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);
CREATE TABLE IF NOT EXISTS "public"."recommendation" (
    "sender_id" "uuid" NOT NULL,
    "receiver_id" "uuid" NOT NULL,
    "item_id" "text" NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    primary key ("sender_id", "receiver_id", "item_id")
);
ALTER TABLE "public"."recommendation" OWNER TO "postgres";
ALTER TABLE ONLY "public"."item"
    ADD CONSTRAINT "item_pkey" PRIMARY KEY ("id");
ALTER TABLE ONLY "public"."movie_detail"
    ADD CONSTRAINT "movie_detail_item_id_key" UNIQUE ("item_id");
ALTER TABLE ONLY "public"."movie_detail"
    ADD CONSTRAINT "movie_detail_pkey" PRIMARY KEY ("tmdb_id");
ALTER TABLE ONLY "public"."recommendation"
    ADD CONSTRAINT "recommendation_pkey" PRIMARY KEY ("id");
ALTER TABLE ONLY "public"."movie_detail"
    ADD CONSTRAINT "movie_detail_item_id_fkey" FOREIGN KEY ("item_id") REFERENCES "public"."item"("id") ON UPDATE CASCADE ON DELETE CASCADE;
ALTER TABLE ONLY "public"."recommendation"
    ADD CONSTRAINT "recommendation_item_id_fkey" FOREIGN KEY ("item_id") REFERENCES "public"."item"("id") ON UPDATE CASCADE ON DELETE CASCADE;
ALTER TABLE ONLY "public"."recommendation"
    ADD CONSTRAINT "recommendation_receiver_id_fkey" FOREIGN KEY ("receiver_id") REFERENCES "auth"."users"("id") ON UPDATE CASCADE ON DELETE CASCADE;
ALTER TABLE ONLY "public"."recommendation"
    ADD CONSTRAINT "recommendation_sender_id_fkey" FOREIGN KEY ("sender_id") REFERENCES "auth"."users"("id") ON UPDATE CASCADE ON DELETE CASCADE;
ALTER TABLE "public"."item" ENABLE ROW LEVEL SECURITY;
ALTER TABLE "public"."movie_detail" ENABLE ROW LEVEL SECURITY;
ALTER TABLE "public"."recommendation" ENABLE ROW LEVEL SECURITY;
GRANT USAGE ON SCHEMA "public" TO "postgres";
GRANT USAGE ON SCHEMA "public" TO "anon";
GRANT USAGE ON SCHEMA "public" TO "authenticated";
GRANT USAGE ON SCHEMA "public" TO "service_role";
GRANT ALL ON TABLE "public"."item" TO "anon";
GRANT ALL ON TABLE "public"."item" TO "authenticated";
GRANT ALL ON TABLE "public"."item" TO "service_role";
GRANT ALL ON TABLE "public"."movie_detail" TO "anon";
GRANT ALL ON TABLE "public"."movie_detail" TO "authenticated";
GRANT ALL ON TABLE "public"."movie_detail" TO "service_role";
GRANT ALL ON SEQUENCE "public"."movie_detail_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."movie_detail_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."movie_detail_id_seq" TO "service_role";
GRANT ALL ON TABLE "public"."recommendation" TO "anon";
GRANT ALL ON TABLE "public"."recommendation" TO "authenticated";
GRANT ALL ON TABLE "public"."recommendation" TO "service_role";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "service_role";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "service_role";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "service_role";
RESET ALL;
